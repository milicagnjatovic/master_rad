CREATE DATABASE GRADER;

CONNECT TO GRADER;

DROP TABLE IF EXISTS ROLE;
CREATE TABLE ROLE (
    ID SMALLINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(10),
    DESCRIPTION VARCHAR(255),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    ABLE_TO_ANSWER_QUESTIONS BOOLEAN DEFAULT FALSE
);

INSERT INTO ROLE(NAME, DESCRIPTION, ABLE_TO_ANSWER_QUESTIONS)
VALUES
    ('admin', 'Namenjeno administratorima.', TRUE),
    ('professor', 'Namenjeno profesorima.', TRUE),
    ('student', 'Namenjeno studentima MATFa.', FALSE),
    ('others', 'Namenjeno ostalim korisnicima.', FALSE);

DROP TABLE IF EXISTS USER;
CREATE TABLE USER (
    ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    USERNAME VARCHAR(10) UNIQUE NOT NULL,
    PASSWORD VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(30) UNIQUE NOT NULL,
    FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(20),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
    ROLE_ID SMALLINT NOT NULL,
    ACTIVE BOOLEAN,
    FOREIGN KEY FK_ROLE (ROLE_ID) REFERENCES ROLE(ID)
);

DROP TABLE IF EXISTS GRADER;
CREATE TABLE GRADER (
    ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(10) NOT NULL UNIQUE,
    ENDPOINT VARCHAR(50) NOT NULL UNIQUE,
    ACTIVE BOOLEAN,
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS TASK;
CREATE TABLE TASK (
    ID INTEGER NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(20),
    GRADER_ID INTEGER NOT NULL,
    FOREIGN KEY FK_GRADER (GRADER_ID) REFERENCES GRADER(ID),
    TEXT VARCHAR(1000) NOT NULL,
    SOLUTION VARCHAR(2500) NOT NULL,
    ORDERING VARCHAR(20),
    CREATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP ,
    LAST_GENERATED_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);



DROP TABLE IF EXISTS SUBMISSION;
CREATE TABLE SUBMISSION (
    TASK_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    IS_CORRECT BOOLEAN,
    QUERY VARCHAR(2500),
    MESSAGE VARCHAR(50),
    NO_SUBMISSIONS INTEGER,
    NO_CORRECT_SUBMISSIONS INTEGER,
    LAST_UPDATE_TIME DATETIME DEFAULT CURRENT_TIMESTAMP,
    WAITING_FOR_RESPONSE BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (TASK_ID, USER_ID),
    FOREIGN KEY FK_TASK (TASK_ID) REFERENCES TASK(ID),
    FOREIGN KEY FK_USER (USER_ID) REFERENCES USER(ID)
);


DROP TABLE IF EXISTS PERMISSION;
CREATE TABLE PERMISSION (
    ROLE_ID INTEGER NOT NULL,
    GRADER_ID INTEGER NOT NULL,
    PRIMARY KEY (ROLE_ID, GRADER_ID),
    FOREIGN KEY FK_ROLE (ROLE_ID) REFERENCES ROLE(ID),
    FOREIGN KEY FK_GRADER (GRADER_ID) REFERENCES GRADER(ID)
);


DROP TABLE IF EXISTS MESSAGE;
CREATE TABLE MESSAGE (
    STUDENT_ID INTEGER NOT NULL,
    PROFESSOR_ID INTEGER NOT NULL,
    TASK_ID INTEGER NOT NULL,
    QUESTION VARCHAR(256),
    RESPONSE VARCHAR(256),
    CREATED_DATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
    RESPONSE_TIME DATETIME  DEFAULT NULL,
    PRIMARY KEY (STUDENT_ID, TASK_ID),
    FOREIGN KEY FK_SUBMISSION (STUDENT_ID, TASK_ID) REFERENCES SUBMISSION(USER_ID, TASK_ID),
    FOREIGN KEY FK_PROFESSOR (PROFESSOR_ID) REFERENCES USER(ID)
);