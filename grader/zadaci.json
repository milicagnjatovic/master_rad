{
  "zadaci": [
    {
      "task": "Izdvojiti podatke o svim predmetima.",
      "solution": "SELECT *  FROM DA.PREDMET",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti podatke o svim studentima rođenim u Beogradu. Uzeti u obzir sve Beogradske opštine.",
      "solution": "SELECT * FROM DA.DOSIJE WHERE mestorodjenja LIKE 'Beograd%';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti podatke o svim studentima koji nisu rođeni u Beogradu. . Uzeti u obzir sve Beogradske opštine.",
      "solution": "SELECT * FROM DA.DOSIJE WHERE MESTORODJENJA NOT LIKE 'Beograd%';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti podatke o svim studentima koji su rođeni u Boru ili Zrenjaninu.",
      "solution": "SELECT * FROM DA.DOSIJE WHERE MESTORODJENJA = 'Bor' OR MESTORODJENJA = 'Zrenjanin';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti podatke o svim studentkinjama rođenim u Beogradu.",
      "solution": "SELECT * FROM DA.DOSIJE WHERE MESTORODJENJA LIKE 'Beograd%' AND POL = 'z';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti nazive različitih mesta u kojima su rođeni studenti.",
      "solution": "SELECT DISTINCT MESTORODJENJA FROM DA.DOSIJE;",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti nazive predmeta koji imaju više od 6 ESPB.",
      "solution":  "SELECT NAZIV, ESPB FROM DA.PREDMET WHERE ESPB>6;",
      "ordering": "1,2"
    },
    {
      "task": "Izdvojiti oznake i nazive predmeta koji imaju između 8 i 15 ESPB.",
      "solution": "SELECT OZNAKA, NAZIV   FROM DA.PREDMET  WHERE ESPB BETWEEN 8 AND 15; ",
      "ordering": "1"

    },
    {
      "task": "Izdvojiti podatke o ispitnim rokovima održanim u 2015/2016, 2016/2017. ili 2018/2019. školskoj godini.",
      "solution": "SELECT *  FROM DA.ISPITNIROK  WHERE SKGODINA IN (2015, 2016, 2018);",
      "ordering": "1, 2"
    },
    {
      "task": "Izdvojiti podatke o ispitnim rokovima koji nisu održani u 2015/2016, 2016/2017. ili 2018/2019. školskoj godini.",
      "solution": "SELECT *  FROM DA.ISPITNIROK  WHERE SKGODINA NOT IN (2015, 2016, 2018);",
      "ordering": "1, 2"
    },
    {
      "task": "Izdvojiti podatke o studentima koji su fakultet upisali 2015. godine, pod pretpostavkom da godina iz indeksa odgovara godini upisa na fakultet.",
      "solution": "SELECT *   FROM DA.DOSIJE  WHERE INDEKS/10000 = 2015;",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti nazive predmeta i njihovu cenu za samofinansirajuće studente izraženu u dinarima. Jedan ESPB košta 2000 dinara. Kolonu sa cenom nazvati CENA",
      "solution": "SELECT NAZIV, ESPB*2000 AS CENA   FROM DA.PREDMET;",
      "ordering": "1, 2"
    },
    {
      "task": "Izdvojiti nazive predmeta i njihovu cenu za samofinansirajuće studente izraženu u dinarima. Izdvojiti samo one predmete koji koštaju više od 10 000 dinara. Jedan ESPB košta 2000 dinara. Kolonu sa cenom nazvati \"cena poena\".",
      "solution": "SELECT NAZIV, ESPB*2000 AS \"Cena poena\"  FROM DA.PREDMET   WHERE ESPB*2000 > 10000;",
      "ordering": "1, 2"
    },
    {
      "task": "Izdvojiti nazive predmeta i njihovu cenu za samofinansirajuće studente izraženu u dinarima. Jedan ESPB košta 2000 dinara. Između kolone naziv i kolone cena dodati kolonu u kojoj će za svaku vrstu biti ispisano \"Cena u dinarima\".",
      "solution": "SELECT NAZIV , 'Cena u dinarima', ESPB*2000  FROM DA.PREDMET",
      "ordering": "1, 3"
    },
    {
      "task": "Izdvojiti indeks i mesto rođenja studenata koji su rođeni u mestu čiji naziv sadrži malo slovo o kao drugo slovo.",
      "solution": "SELECT INDEKS, MESTORODJENJA  FROM DA.DOSIJE  WHERE MESTORODJENJA LIKE '_o%';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indeks i mesto rođenja studenata koji su rođeni u mestu čiji naziv sadrži malo slovo o.",
      "solution": "SELECT INDEKS, MESTORODJENJA  FROM DA.DOSIJE  WHERE MESTORODJENJA LIKE '%o%';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indeks i mesto rođenja studenata koji su rođeni u mestu čiji naziv se završava sa malo e.",
      "solution": "SELECT INDEKS, MESTORODJENJA  FROM DA.DOSIJE  WHERE MESTORODJENJA LIKE '%e';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indeks i mesto rođenja studenata koji su rođeni u mestu čiji naziv počinje sa N a završava sa d.",
      "solution": "SELECT INDEKS, MESTORODJENJA  FROM DA.DOSIJE  WHERE MESTORODJENJA LIKE 'N%d';",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti podatke o predmetima. Rezultat urediti po ESPB u rastućem poretku i po nazivu u opadajućem poretku",
      "solution":  "SELECT *   FROM DA.PREDMET  ORDER BY ESPB ASC, NAZIV DESC;"
    },
    {
      "task": "Izdvojiti ime, prezime i datum upisa na fakultet za studenate koji su fakultet upisali između 10. jula 2017. i 15.9.2017. godine. Rezultat urediti prema prezimenu studenta.",
      "solution": "SELECT IME, PREZIME, DATUPISA   FROM DA.DOSIJE  WHERE DATUPISA BETWEEN '10.07.2017' AND '15.09.2017'  ORDER BY PREZIME;"
    },
    {
      "task": "Izdvojiti podatke o studijskim programima čija je predviđena dužina studiranja 3 ili više godina. Izdvojiti oznaku i naziv studijskog programa i broj godina predviđenih za studiranje studijskog programa. Rezultat urediti prema predviđenom broju godina za studiranje i nazivu studijskog programa.",
      "solution": "SELECT OZNAKA, NAZIV, OBIMESPB/60 BROJ_GODINA FROM DA.STUDIJSKIPROGRAM  WHERE OBIMESPB >= 3*60  ORDER BY BROJ_GODINA, NAZIV;"
    },
    {
      "task": "Izdvojiti nazive predmeta koje je polaga o student sa indeksom 22/2017. Rezulate sortirati po id-u predmeta opadajuće.",
      "solution": "SELECT NAZIV FROM DA.PREDMET WHERE ID IN (   SELECT IDPREDMETA   FROM DA.ISPIT WHERE INDEKS=20170022 AND STATUS NOT IN ('p', 'n') ) ORDER BY ID DESC;"
    },
    {
      "task": "Izdvojiti ime i prezime studenta koji ima ispit položen sa ocenom 9. Sortirati po indeksu studenta rastuće i prezimenu opadajuće.",
      "solution": "SELECT IME, PREZIME FROM DA.DOSIJE WHERE INDEKS IN (   SELECT INDEKS   FROM DA.ISPIT I   WHERE OCENA=9 AND STATUS='o' ) ORDER BY INDEKS ASC, PREZIME DESC;"
    },
    {
      "task": "Izdvojiti indekse studenata koji su položili bar jedan predmet koji nije položio student sa indeksom 22/2017. Sortirati po indeksu.",
      "solution": "SELECT DISTINCT INDEKS FROM DA.ISPIT WHERE OCENA>5 AND STATUS='o' AND   IDPREDMETA NOT IN (     SELECT IDPREDMETA     FROM DA.ISPIT     WHERE OCENA>5 AND STATUS='o'       AND INDEKS = 20170022   ) ORDER BY INDEKS;"
    },
    {
      "task": "Izdvojiti nazive predmeta koje je položio student sa indeksom 22/2017, sortirano po nazivu.",
      "solution": "SELECT NAZIV FROM DA.PREDMET AS P WHERE EXISTS (   SELECT *   FROM DA.ISPIT AS I   WHERE P.ID=I.IDPREDMETA AND     INDEKS=20170022 AND     OCENA>5 AND STATUS='o' ) ORDER BY NAZIV;"
    },
    {
      "task": "Izdvojiti naziv predmeta čiji je kurs organizovan u svim školskim godinama o kojima postoje podaci u bazi podataka. Sortirati po id-u predmeta.",
      "solution": "SELECT NAZIV  FROM DA.PREDMET AS P WHERE NOT EXISTS (   SELECT *   FROM DA.SKOLSKAGODINA SG   WHERE NOT EXISTS (     SELECT *     FROM DA.KURS K     WHERE K.IDPREDMETA = P.ID       AND SG.SKGODINA = K.SKGODINA   ) ) ORDER BY ID;"
    },
    {
      "task": "Izdvojiti indekse studenata koji su upisali sve školske godine o kojima postoje podaci u bazi podataka.",
      "solution": "SELECT D.INDEKS FROM DA.DOSIJE AS D WHERE NOT EXISTS (   SELECT *   FROM DA.SKOLSKAGODINA SG   WHERE NOT EXISTS (     SELECT *     FROM DA.UPISGODINE UG     WHERE D.INDEKS = UG.INDEKS       AND SG.SKGODINA = UG.SKGODINA   ) );",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indekse studenata koji su polagali u svim ispitnim rokovima. Sortirati po indeksu.",
      "solution": "SELECT INDEKS FROM DA.DOSIJE AS D WHERE NOT EXISTS (   SELECT *   FROM DA.ISPITNIROK IR   WHERE NOT EXISTS (     SELECT *     FROM DA.ISPIT AS I     WHERE I.INDEKS = D.INDEKS AND       I.SKGODINA = IR.SKGODINA AND       I.OZNAKAROKA = IR.OZNAKAROKA AND        I.STATUS NOT IN ('p', 'n')   ) ) ORDER BY INDEKS;"
    },
    {
      "task": "Izdvojiti indekse studenata koji su polagali u svim ispitnim rokovima održanim u 2018/2019. školskoj godini.",
      "solution": "SELECT INDEKS FROM DA.DOSIJE AS D WHERE NOT EXISTS (   SELECT *   FROM DA.ISPITNIROK IR   WHERE IR.SKGODINA=2018 AND NOT EXISTS (     SELECT *     FROM DA.ISPIT AS I     WHERE I.INDEKS = D.INDEKS AND       I.SKGODINA = IR.SKGODINA AND       I.OZNAKAROKA = IR.OZNAKAROKA AND        I.STATUS NOT IN ('p', 'n')   ) );",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti podatke o predmetima sa najvećim brojem espb bodova.",
      "solution": "SELECT * FROM DA.PREDMET  WHERE ESPB >= ALL (   SELECT ESPB   FROM DA.PREDMET );",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indekse studenata sa najranijim datumom diplomiranja.",
      "solution": "SELECT INDEKS FROM DA.DOSIJE  WHERE DATDIPLOMIRANJA <= ALL (   SELECT DATDIPLOMIRANJA   FROM DA.DOSIJE   WHERE DATDIPLOMIRANJA IS NOT NULL );",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indekse studenata osim onih sa najranijim datumom diplomiranja.",
      "solution": "SELECT * FROM DA.DOSIJE  WHERE DATDIPLOMIRANJA > SOME (   SELECT DATDIPLOMIRANJA   FROM DA.DOSIJE   WHERE DATDIPLOMIRANJA IS NOT NULL ) OR DATDIPLOMIRANJA IS NULL;",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti nazive predmeta koje je upisao bar jedan student. Predmeti ne treba da se ponavljaju.",
      "solution": "SELECT DISTINCT NAZIV FROM DA.PREDMET AS P WHERE EXISTS (   SELECT *   FROM DA.UPISANKURS UK   WHERE UK.IDPREDMETA = P.ID );"
    },
    {
      "task": "Za studente koji su polagali ispit u ispitnom roku održanom u 2018/2019. šk. godini izdvojiti podatke o položenim ispitima. Izdvojiti indeks, ime, prezime studenta, naziv položenog predmeta, oznaku ispitnog roka i školsku godinu u kojoj je ispit položen.",
      "solution": "SELECT D.INDEKS, D.IME, D.PREZIME, P.NAZIV, I.OZNAKAROKA, I.SKGODINA FROM DA.DOSIJE D JOIN DA.ISPIT AS I     ON D.INDEKS = I.INDEKS       AND OCENA>5 AND STATUS='o'   JOIN DA.PREDMET AS P     ON I.IDPREDMETA = P.ID WHERE EXISTS (   SELECT *   FROM DA.ISPIT I1   WHERE I1.INDEKS = D.INDEKS AND SKGODINA=2018     AND STATUS NOT IN ('p', 'n') );",
      "ordering": "1, 4"
    },
    {
      "task": "Izdvojiti podatke o predmetima koje su polagali svi studenti iz Berana koji studiraju smer sa oznakom I.",
      "solution": "SELECT * FROM DA.PREDMET AS P WHERE NOT EXISTS (   SELECT *   FROM DA.DOSIJE D JOIN DA.STUDIJSKIPROGRAM SP     ON D.IDPROGRAMA = SP.ID AND OZNAKA = 'I'       AND MESTORODJENJA = 'Berane'   WHERE NOT EXISTS (     SELECT *     FROM DA.ISPIT AS I     WHERE I.INDEKS = D.INDEKS       AND I.IDPREDMETA = P.ID       AND STATUS NOT IN ('p', 'n')   ) );",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indekse studenata čiji je datum diplomiranja nepoznat.",
      "solution": "SELECT INDEKS FROM DA.DOSIJE WHERE DATDIPLOMIRANJA IS NULL;",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti indekse studenata čiji datum diplomiranja nije nepoznat.",
      "solution": "SELECT INDEKS FROM DA.DOSIJE WHERE DATDIPLOMIRANJA IS NOT NULL;",
      "ordering": "1"
    },
    {
      "task": "Prikazati podatke o svim mogućim parovima studijskog programa i studentskih statusa. Prikazati naziv statusa i naziv programa.",
      "solution": "SELECT SS.NAZIV, SP.NAZIV  FROM DA.STUDIJSKIPROGRAM SP, DA.STUDENTSKISTATUS SS;",
      "ordering": "1,2"
    },
    {
      "task": "Prikazati podatke o studentima i njihovim ispitima. Prikazati indeks i id predmeta.",
      "solution": "SELECT D.INDEKS, I.IDPREDMETA FROM DA.DOSIJE D JOIN DA.ISPIT I ON D.INDEKS = I.INDEKS;",
      "ordering": "1,2"
    },
    {
      "task": "Prikazati podatke o studentima i njihovim ispitima koji su održani 28.1.2016. Izdvojiti indeks, ime i prezime studenta, id predmeta i ocenu.",
      "solution": "SELECT D.INDEKS, D.IME, D.PREZIME, I.IDPREDMETA, I.OCENA     FROM DA.DOSIJE AS D JOIN DA.ISPIT AS I       ON D.INDEKS = I.INDEKS     WHERE DATPOLAGANJA='28.1.2016';",
      "ordering": "1,4,5"
    },
    {
      "task": "Izdvojiti podatke o položenim ispitima. Prikazati indeks, ime i prezime studenta koji je položio ispit, naziv položenog predmeta i ocenu.",
      "solution": "SELECT D.INDEKS, D.IME, D.PREZIME, P.NAZIV, OCENA FROM DA.DOSIJE AS D, DA.ISPIT AS I, DA.PREDMET AS P WHERE D.INDEKS = I.INDEKS AND P.ID = I.IDPREDMETA AND OCENA>5 AND STATUS = 'o';",
      "ordering": "1,4,5"
    },
    {
      "task": "Izdvojiti podatke o studentima za koje važi da su diplomirali dana kada je održan neki ispit. Studenti ne treba da se ponavljaju. Prikazati indeks i datum diplomiranja studenta.",
      "solution": "SELECT D.INDEKS, D.DATDIPLOMIRANJA FROM DA.DOSIJE D JOIN DA.ISPIT I ON D.DATDIPLOMIRANJA = I.DATPOLAGANJA;",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti parove predmeta koji imaju isti broj espb bodova. Izdvojiti oznake predmeta i broj espb bodova (1 broj, treća kolona). Oznaka prvog predmeta treba da bude leksikografski pre oznake drugog.",
      "solution": "SELECT P1.OZNAKA, P2.OZNAKA FROM DA.PREDMET AS P1 JOIN DA.PREDMET AS P2   ON P1.ESPB = P2.ESPB AND P1.OZNAKA < P2.OZNAKA;",
      "ordering": "1, 2"
    },
    {
      "task": "Izdvojiti indeks, ime i prezime studenata čije prezime sadrži malo slovo a na 4. poziciji i završava na malo slovo c i koji su predmet čiji je broj espb bodova između 2 i 10 položili sa ocenom 6, 8 ili 10 između 5. januara 2018. i 15. decembra 2018. Rezultat urediti prema prezimenu u rastućem poretku i imenu u opadajućem poretku. Studenti ne treba da se ponavljaju.",
      "solution": "SELECT DISTINCT D.INDEKS, D.IME, D.PREZIME FROM DA.DOSIJE AS D JOIN DA.ISPIT AS I     ON D.INDEKS =  I.INDEKS   JOIN DA.PREDMET AS P     ON P.ID = I.IDPREDMETA WHERE PREZIME LIKE '___a%c' AND   P.ESPB BETWEEN 2 AND 10 AND   I.OCENA IN (6,8,10) AND   I.DATPOLAGANJA BETWEEN '5.1.2018' AND '15.12.2018' ORDER BY D.PREZIME ASC, D.IME DESC;"
    },
    {
      "task": "Za svaki predmet koji može da se sluša na nekom studijskom programu izdvojiti uslovne predmete tog predmeta. Izdvojiti identifikator studijskog programa, identifikator predmeta, vrstu tog predmeta (obavezan ili izborni) na studijskom programu i identifikator uslovnog predmeta. Izdvojiti i predmete koji nemaju uslovne predmete.",
      "solution": "SELECT PP.IDPROGRAMA, PP.IDPREDMETA, PP.VRSTA, UP.IDUSLOVNOGPREDMETA FROM DA.PREDMETPROGRAMA PP LEFT JOIN DA.USLOVNIPREDMET UP     ON PP.IDPREDMETA = UP.IDPREDMETA AND PP.IDPROGRAMA = UP.IDPROGRAMA;",
      "ordering": "1,2"
    },
    {
      "task": "Izdvojiti parove naziva razlicitih ispitnih rokova u kojima je isti student polagao isti predmet. Potrebno je prikazati nazive rokova tako da je prvi u paru održan pre drugog.",
      "solution": "SELECT IR1.NAZIV, IR2.NAZIV FROM DA.ISPIT I1 JOIN DA.ISPIT I2     ON I1.INDEKS=I2.INDEKS AND I1.IDPREDMETA=I2.IDPREDMETA AND I1.DATPOLAGANJA < I2.DATPOLAGANJA     AND I1.STATUS NOT IN ('p', 'n') AND I2.STATUS NOT IN ('p', 'n')   JOIN DA.ISPITNIROK IR1     ON IR1.SKGODINA=I1.SKGODINA AND IR1.OZNAKAROKA=I1.OZNAKAROKA   JOIN DA.ISPITNIROK IR2     ON IR2.SKGODINA=I2.SKGODINA AND IR2.OZNAKAROKA=I2.OZNAKAROKA;",
      "ordering": "1,2"
    },
    {
      "task": "Izdvojiti parove student-ispitni rok za koje važi da je student diplomirao poslednjeg dana roka. Izdvojiti indeks, ime, prezime, datum diplomiranja studenta, naziv ispitnog roka i datum kraja ispitnog roka. Prikazati i studente i ispitne rokove koji nemaju odgovarajućeg para.",
      "solution": "SELECT D.INDEKS, D.IME, D.PREZIME, D.DATDIPLOMIRANJA, IR.NAZIV, IR.DATKRAJA FROM DA.DOSIJE AS D FULL JOIN DA.ISPITNIROK AS IR   ON D.DATDIPLOMIRANJA = IR.DATKRAJA;",
      "ordering": "1, 5"
    },
    {
      "task": "Za svaki ispitni rok izdvojiti ocene sa kojima su studenti položili ispite u tom roku. Izdvojiti naziv ispitnog roka i ocene. Izdvojiti i ispitne rokove u kojima nije položen nijedan ispit. Rezultat urediti prema nazivu ispitnog roka u rastućem poretku i prema oceni u opadajućem poretku.",
      "solution": "SELECT DISTINCT IR.NAZIV, I.OCENA FROM DA.ISPITNIROK AS IR LEFT JOIN DA.ISPIT AS I   ON   IR.OZNAKAROKA = I.OZNAKAROKA AND IR.SKGODINA = I.SKGODINA     AND STATUS='o' AND OCENA>5 ORDER BY IR.NAZIV ASC, I.OCENA DESC;"
    },
    {
      "task": "Za svakog studenta koji u imenu sadrži nisku ark izdvojiti podatke o položenim ispitima. Izdvojiti indeks, ime i prezime studenta, naziv položenog predmeta i dobijenu ocenu. Izdvojiti podatke i o studentu koji nema nijedan položen ispit. Rezultat urediti prema indeksu i identifikatoru predmeta.",
      "solution": "SELECT D.INDEKS, D.IME, D.PREZIME, P.NAZIV, I.OCENA FROM DA.DOSIJE AS D LEFT JOIN DA.ISPIT AS I     ON D.INDEKS = I.INDEKS AND I.OCENA>5 AND I.STATUS='o'   LEFT JOIN DA.PREDMET AS P     ON I.IDPREDMETA = P.ID WHERE D.IME LIKE '%ark%' ORDER BY INDEKS, P.ID;"
    },
    {
      "task": "Predmeti se kategorišu kao laki ukoliko nose manje od 6 bodova, kao teški ukoliko nose više od 8 bodova, inače su srednje teški. Prebrojati koliko predmeta pripada kojoj kategoriji. Izdvojiti kategoriju i broj predmeta iz te kategorije.",
      "solution":  "SELECT     CASE      WHEN ESPB < 6 THEN 'LAK'     WHEN ESPB > 8 THEN 'SREDNJE TEZAK'     ELSE 'TEZAK'    END AS TEZINA, COUNT(*) FROM DA.PREDMET  GROUP BY (CASE      WHEN ESPB < 6 THEN 'LAK'     WHEN ESPB > 8 THEN 'SREDNJE TEZAK'     ELSE 'TEZAK'    END);",
      "ordering": "1"
    },
    {
      "task": " Izračunati koliko studenata je položilo više od 10 bodova.",
      "solution": "WITH STUDENT_BODOVI AS (   SELECT INDEKS, SUM(ESPB) BODOVI   FROM DA.ISPIT I JOIN DA.PREDMET P     ON I.IDPREDMETA = P.ID   WHERE OCENA>5 AND STATUS='o'   GROUP BY INDEKS )  SELECT COUNT(*) FROM STUDENT_BODOVI WHERE BODOVI>10;"
    },
    {
      "task": "Naći broj ispitnih rokova u kojima su studenti položili bar 2 različita predmeta.  ",
      "solution": "WITH STUDENT_ROK_POLOZENO AS (   SELECT INDEKS, OZNAKAROKA, SKGODINA, COUNT(*) POLOZENO   FROM DA.ISPIT   WHERE STATUS='o' AND OCENA>5   GROUP BY INDEKS, OZNAKAROKA, SKGODINA   HAVING COUNT(*)>2 ) SELECT COUNT(*) FROM STUDENT_ROK_POLOZENO;"
    },
    {
      "task": "Za svaki predmet izdvojiti identifikator i broj različitih studenata koji su ga polagali. Uz identifikatore predmeta koje niko nije polagao izdvojiti 0. Kolonu sa broj studenata nazvait \"Broj studenata\".",
      "solution": "WITH POLAGANI AS (SELECT IDPREDMETA, COUNT(DISTINCT INDEKS) BR   FROM DA.ISPIT   WHERE STATUS NOT IN('p', 'n')   GROUP BY IDPREDMETA ) SELECT ID,  COALESCE(BR, 0) \"Broj studenata\" FROM DA.PREDMET LEFT JOIN POLAGANI ON IDPREDMETA=ID;",
      "ordering": "1"
    },
    {
      "task": "Za studenta koji ima ocenu 8 ili 9 izračunati iz koliko ispita je dobio ocenu 8 i iz koliko ispita je dobio ocenu 9. Izdvojiti indeks studenta, broj ispita iz kojih je student dobio ocenu 8 i broj ispita iz kojih je student dobio ocenu 9.",
      "solution": "SELECT INDEKS,    SUM(CASE WHEN OCENA=8 THEN 1 ELSE 0 END) OSAM,   SUM(CASE WHEN OCENA=9 THEN 1 ELSE 0 END) DEVET FROM DA.ISPIT WHERE OCENA=8 OR OCENA=9 GROUP BY INDEKS;",
      "ordering": "1"
    },
    {
      "task": "Studentima koji su položili neki ispit, izdvojti pored imena i prezimena, naziv predmeta koji su položili iz prvog pokušaja.",
      "solution": "WITH INDEKS_PREDMET_POLAGANO AS (   SELECT INDEKS, NAZIV, COUNT(*) POLAGANO,      SUM(CASE WHEN OCENA>5 AND STATUS='o' THEN 1 ELSE 0 END) POLOZENO   FROM DA.ISPIT I JOIN DA.PREDMET P     ON I.IDPREDMETA = P.ID   GROUP BY INDEKS, NAZIV, P.ID ) SELECT IME, PREZIME, NAZIV FROM DA.DOSIJE D JOIN INDEKS_PREDMET_POLAGANO I   ON D.INDEKS = I.INDEKS WHERE POLAGANO=1 AND POLOZENO=1;",
      "ordering": "1,2,3"
    },
    {
      "task": "Za sva imena studenata izdvojiti predmete na kojima su studenti sa tim imenom dobili najveću ocenu. Ukoliko su za neko ime studenti sa tim imenom iz više predmeta dobili maksimalnu ocenu, izdvojiti sve takve predmete. Izdvojiti ime, naziv predmeta i dobijenu ocenu. Pored toga, izdvojiti takozvani dugi kod imena. Dugi kod imena dobija se na sledeći način: ukoliko je ocena koja je izdvojena uz ime nepoznata, dugi kod jeste niska 'NULL'; ukoliko je ocena koja je izdvojena uz ime manja od deset, dugi kod jeste niska koja se dobija prema forumli inicijale iz imena i naziva predmeta * ocena  (npr. ako je Mirko položio Analizu 3 sa ocenom 6, kod je 'MAMAMAMAMAMA'); ukoliko je dobijena ocena deset, kod predstavlja poslednje slovo imena ponovljeno 10 puta. Kolonu nazvati \"dugi kod\". Rezultat urediti prema imenu, nazivu i ocenu.",
      "solution": "SELECT D.IME, P.NAZIV, I.OCENA,    CASE      WHEN OCENA IS NULL THEN 'NULL'     WHEN OCENA<10 THEN REPEAT( SUBSTRING(IME, 1, 1) || SUBSTRING(NAZIV, 1, 1) ,6)     ELSE REPEAT(SUBSTRING(IME, LENGTH(IME)), 10)   END \"Dugi kod\" FROM DA.DOSIJE D LEFT JOIN DA.ISPIT I     ON D.INDEKS = I.INDEKS AND OCENA>5 AND STATUS='o'   LEFT JOIN DA.PREDMET P     ON P.ID = I.IDPREDMETA WHERE NOT EXISTS (   SELECT *   FROM DA.ISPIT I1 JOIN DA.DOSIJE D1     ON I1.INDEKS = D1.INDEKS   WHERE D1.IME = D.IME AND I1.OCENA>I.OCENA AND STATUS='o' ) ORDER BY 1,2,3;"
    },
    {
      "task": "Izdvojiti indekse studenata koji su  rođeni u Beogradu ili imaju ocenu 10. Rezultat urediti u opadajućem poretku.",
      "solution": "SELECT INDEKS FROM DA.DOSIJE WHERE MESTORODJENJA LIKE 'Beograd%' UNION  SELECT INDEKS FROM DA.ISPIT WHERE OCENA=10 ORDER BY INDEKS DESC;"
    },
    {
      "task": "Izdvojiti indekse studenata koji su  rođeni u Beogradu i imaju ocenu 10. Rezultat urediti u opadajućem poretku.",
      "solution": "SELECT INDEKS FROM DA.DOSIJE WHERE MESTORODJENJA LIKE 'Beograd%' INTERSECT  SELECT INDEKS FROM DA.ISPIT WHERE OCENA=10 ORDER BY INDEKS DESC;"
    },
    {
      "task": "Izdvojiti indekse studenata koji imaju ocenu 8 i imaju ocenu 10. Rezultat urediti u opadajućem poretku.",
      "solution": "SELECT INDEKS FROM DA.ISPIT WHERE OCENA=8 INTERSECT SELECT INDEKS FROM DA.ISPIT WHERE OCENA=10 ORDER BY INDEKS DESC;"
    },
    {
      "task": "Izdvojiti indekse studenata koji su rođeni u Beogradu i nisu dobili ocenu 10 na nekom ispitu. Rezultat urediti u opadajućem poretku. ",
      "solution": "SELECT INDEKS FROM DA.DOSIJE WHERE MESTORODJENJA LIKE 'Beograd%' EXCEPT  SELECT INDEKS FROM DA.ISPIT WHERE OCENA=10 ORDER BY INDEKS DESC;"
    },
    {
      "task": "Za svaki polagan ispit izdvojiti indeks, identifikator predmeta i dobijenu ocenu. Vrednost ocene ispisati i slovima (koristiti \"ošišanu latinicu\"). Ako je predmet nepoložen umesto ocene ispisati \"nepolozen\". Kolonu sa ocenom slovima nazvati \"Ocena slovima\".",
      "solution": "SELECT INDEKS, IDPREDMETA, OCENA,   CASE OCENA     WHEN 10 THEN 'deset'     WHEN 9 THEN 'devet'     WHEN 8 THEN 'osam'     WHEN 7 THEN 'sedam'     WHEN 6 THEN 'sest'     ELSE 'nepolozen'   END AS \"Ocena slovima\" FROM DA.ISPIT WHERE STATUS NOT IN ('p', 'n')",
      "ordering": "1,2"
    },
    {
      "task": "Klasifikovati predmete prema broju espb bodova na sledeći način: ako predmet ima više od 15 espb bodova tada pripada I kategoriji; ako je broj espb bodova predmeta u intervalu [10,15] tada pripada II kategoriji, inače predmet pripada III kategoriji. Izdvojiti naziv predmeta, espb bodove i kategoriju (vrednost treba da bude I, II ili III). Kolonu sa kategorijom nazvati \"kategorija\".",
      "solution": "SELECT NAZIV, ESPB,   CASE      WHEN ESPB>15 THEN 'I'     WHEN ESPB>=10 THEN 'II'     ELSE 'III'   END AS KATEGORIJA FROM DA.PREDMET;",
      "ordering": "1,2"
    },
    {
      "task": "Ispisati trenutni datum i trenutno vreme. Kolonu sa datumom nazvati \"datum\", a kolonu sa vremenom \"vreme\"",
      "solution":"SELECT CURRENT_DATE , CURRENT_TIME FROM SYSIBM.SYSDUMMY1;"
    },
    {
      "task": "Izračunati koji je dan u nedelji (njegovo ime) bio 3.11.2019.",
      "solution": "VALUES DAYNAME('3.11.2019');"
    },
    {
      "task": "Ispisati koji će datum biti za 12 godina, 5 meseci i 25 dana. ",
      "solution": "VALUES CURRENT_DATE + 12 YEARS + 5 MONTHS + 25 DAYS;"
    },
    {
      "task": "Izdvojiti ispite koji su održani posle 28. septembra 2020. godine. Potrebno je prikazati indeks, idpredmeta i datum polaganja.",
      "solution": "SELECT INDEKS, IDPREDMETA, DATPOLAGANJA FROM DA.ISPIT WHERE DATPOLAGANJA > '28.9.2020';",
      "ordering": "1,2"
    },
    {
      "task": "Pronaći ispite koji su održani u poslednjih 8 meseci. Potrebno je prikazati indeks, idpredmeta i datum polaganja.",
      "solution": "SELECT  INDEKS, IDPREDMETA, DATPOLAGANJA  FROM DA.ISPIT WHERE DATPOLAGANJA > CURRENT_DATE - 8 MONTHS;",
      "ordering": "1,2"
    },
    {
      "task": "Za sve ispite koji su održani u poslednjih 5 godina izračunati koliko je godina, meseci i dana prošlo od njihovog održavanja. Izdvojiti indeks, naziv predmeta, ocenu, broj godina (kolonu nazvati godina), broj meseci (kolonu nazvati meseci) i broj dana (kolonu nazavti dana).",
      "solution": "SELECT INDEKS, NAZIV, OCENA,  YEAR(CURRENT_DATE - DATPOLAGANJA) GODINA,   MONTH(CURRENT_DATE - DATPOLAGANJA) MESECI,   DAY(CURRENT_DATE - DATPOLAGANJA) DANA FROM DA.ISPIT AS I JOIN DA.PREDMET AS P   ON I.IDPREDMETA = P.ID WHERE CURRENT_DATE - DATPOLAGANJA <= 50000;",
      "ordering": "1, 2, 4, 5, 6"
    },
    {
      "task": "Izdvojiti indeks, ime, prezime, mesto rođenja i inicijale studenata. Ime i prezime napisati u jednoj koloni, a za studente rođene u Beogradu (i sve Beogradske opštine) kao mesto rođenja ispisati Bg. ",
      "solution": "SELECT INDEKS, IME || ' ' || PREZIME \"ime i prezime\",   CONCAT(SUBSTR(IME, 1, 1), SUBSTR(PREZIME, 1, 1)) AS INICIJALI,   CASE      WHEN MESTORODJENJA LIKE '%Beograd%' THEN 'Bg'      ELSE MESTORODJENJA   END FROM DA.DOSIJE;",
      "ordering": "1"
    },
    {
      "task": "Za priznate ispite izdvojiti indeks, naziv predmeta i dobijenu ocenu. Ako je ocena nepoznata, umesto NULL vrednosti ispisati -1.",
      "solution": "SELECT INDEKS, NAZIVPREDMETA,    COALESCE(OCENA, -1) FROM DA.PRIZNATISPIT;",
      "ordering": "1,2"
    },
    {
      "task": "Ako je predmetima potrebno uvećati broj espb bodova za 20% prikazati koliko će svaki predmet imati espb bodova nakon uvećanja. Uvećani broj bodova prikazati sa dve decimale. Potrebno je prikazati oznaku predmeta, njegov naziv i uvećan broj bodova (kolonu nazvati \"uvecano\").",
      "solution": "SELECT OZNAKA, NAZIV,    DECIMAL(ESPB*1.2, 6, 2) UVECANO, FROM DA.PREDMET;",
      "ordering": "1"
    },
    {
      "task": "Pronaći indekse studenata koji su jedini položili ispit iz nekog predmeta sa ocenom 10. Za studenta sa brojem indeksa GGGGBBBB izdvojiti indeks u formatu BBBB/GGGG. Pored indeksa u datom formatu treba izdvojiti i naziv predmeta.",
      "solution": "SELECT SUBSTR(INDEKS, 5) || '/' || SUBSTR(INDEKS, 1, 4), NAZIV FROM DA.ISPIT I JOIN DA.PREDMET P   ON I.IDPREDMETA = P.ID WHERE OCENA=10 AND STATUS='o' AND   NOT EXISTS (     SELECT *     FROM DA.ISPIT I1     WHERE I.INDEKS <> I1.INDEKS AND       I.IDPREDMETA = I1.IDPREDMETA AND       I1.OCENA=10 AND I1.STATUS='o'   );",
      "ordering": "1"
    },
    {
      "task": "Za svaki ispitni rok koji je održan između 2000/2001. i 2020/2021. školske godine izdvojiti imena dana u kojima su polagani ispiti u tom roku. Izdvojiti naziv ispitnog roka i ime dana. Za ispitne rokove u kojima nije polagan nijedan ispit ili je datum polaganja nepoznat umesto dana ispisati 'nije bilo ispita ili je nepoznat datum'. Svi redovi treba da budu različiti.",
      "solution": "SELECT DISTINCT IR.NAZIV,    COALESCE(DAYNAME(DATPOLAGANJA), 'Nije bilo ispita ili nepoznat datum') FROM DA.ISPITNIROK IR LEFT JOIN DA.ISPIT AS I   ON IR.OZNAKAROKA = I.OZNAKAROKA AND     IR.SKGODINA = I.SKGODINA WHERE IR.SKGODINA BETWEEN 2000 AND 2020;",
      "ordering": "1"
    },
    {
      "task": "Za svaki ispitni rok koji je održan između 2000/2001. i 2020/2021. školske godine izdvojiti imena dana u kojima su polagani ispiti u tom roku. Izdvojiti naziv ispitnog roka i ime dana. U zavisnosti od toga da li u roku nije bilo ispita ili je datum nepoznat ispisati 'nije bilo ispita' ili 'nepoznat datum'. Svi redovi treba da budu različiti.",
      "solution": "SELECT DISTINCT IR.NAZIV,    COALESCE(DAYNAME(DATPOLAGANJA), 'Nepoznat datum') FROM DA.ISPITNIROK IR JOIN DA.ISPIT AS I   ON IR.OZNAKAROKA = I.OZNAKAROKA AND     IR.SKGODINA = I.SKGODINA WHERE IR.SKGODINA BETWEEN 2000 AND 2020 UNION SELECT DISTINCT IR.NAZIV, ('Nije bilo ispita') FROM DA.ISPITNIROK IR  WHERE NOT EXISTS(   SELECT *   FROM DA.ISPIT I   WHERE I.OZNAKAROKA = IR.OZNAKAROKA AND     I.SKGODINA = IR.SKGODINA );",
      "ordering": "1"

    },
    {
      "task": "Izdvojiti ukupan broj studenata. ",
      "solution": "SELECT COUNT(*) FROM DA.DOSIJE;"
    },
    {
      "task": "Izdvojiti ukupan broj studenata koji bar iz jednog predmeta imaju ocenu 10. ",
      "solution": "SELECT COUNT(DISTINCT INDEKS) FROM DA.ISPIT WHERE OCENA = 10 AND STATUS='o';"
    },
    {
      "task": "Izdvojiti ukupan broj položenih predmeta i položenih espb bodova za studenta sa indeksom 25/2016. Kolonu sa brojem ispita nazvati \"BROJ_PREDMETA\", a kolonu sa brojem bodova \"BROJ_BODOVA\"",
      "solution": "SELECT COUNT(*) BROJ_PREDMETA, SUM(P.ESPB) BROJ_BODOVA FROM DA.ISPIT I JOIN DA.PREDMET P   ON I.IDPREDMETA = P.ID WHERE I.OCENA>5 AND I.STATUS='o' AND I.INDEKS=20160025;"
    },
    {
      "task": "Izlistati ocene dobijene na ispitima u roku 'sep2' 2015e gdoine. Ako je ocena jednaka 5 ispisati NULL. ",
      "solution": "SELECT NULLIF(OCENA, 5) FROM DA.ISPIT WHERE SKGODINA=2015 AND OZNAKAROKA='sep2';",
      "ordering": "1"
    },
    {
      "task": "Koliko ima različitih ocena dobijenih na ispitima, a da ocena nije 5. ",
      "solution": "SELECT COUNT(DISTINCT NULLIF(OCENA, 5)) FROM DA.ISPIT;"
    },
    {
      "task": "Izdvojiti oznake, nazive i espb bodove predmeta čiji je broj espb bodova veći od prosečnog broja espb bodova svih predmeta.",
      "solution": "SELECT OZNAKA, NAZIV, ESPB FROM DA.PREDMET WHERE ESPB > (   SELECT AVG(ESPB*1.0)   FROM DA.PREDMET )",
      "ordering": "1"
    },
    {
      "task": "Za svakog studenta upisanog na fakultet 2018. godine, koji ima bar jedan položen ispit, izdvojiti broj indeksa, prosečnu ocenu zaokruženu na dve decimale, najmanju ocenu i najveću ocenu iz položenih ispita. ",
      "solution": "SELECT D.INDEKS,    DECIMAL(AVG(OCENA+0.0), 4, 2),   MIN(OCENA) ,   MAX(OCENA)  FROM DA.DOSIJE D JOIN DA.ISPIT I   ON D.INDEKS = I.INDEKS WHERE YEAR(DATUPISA)=2018 AND OCENA>5 AND STATUS='o' GROUP BY(D.INDEKS);",
      "ordering": "1"
    },
    {
      "task": "Izdvojiti naziv predmeta, školsku godinu u kojoj je održan ispit iz tog predmeta i najveću ocenu dobijenu na ispitima iz tog predmeta u toj školskoj godini. ",
      "solution": "SELECT NAZIV, SKGODINA, MAX(OCENA) FROM DA.ISPIT I JOIN DA.PREDMET P   ON I.IDPREDMETA = P.ID GROUP BY SKGODINA, NAZIV, ID;",
      "ordering": "1,2,3"
    },
    {
      "task": "Za svaki predmet izračunati koliko studenata ga je položilo. Izdvojite i predmete koje niko nije položio. Rezultat urediti po identifikatoru predmeta.",
      "solution": "SELECT NAZIV, COUNT(INDEKS) POLOZILO FROM DA.PREDMET P LEFT JOIN DA.ISPIT I   ON P.ID = I.IDPREDMETA     AND OCENA>5 AND STATUS='o' GROUP BY P.ID, P.NAZIV ORDER BY P.ID;"
    },
    {
      "task": "Izdvojiti identifikatore predmeta i broj studenata koji su prijavili ispit. Prikazati samo predmete koje je prijavilo više od 50 različitih studenata. ",
      "solution": "SELECT IDPREDMETA, COUNT(DISTINCT INDEKS) FROM DA.ISPIT  GROUP BY IDPREDMETA HAVING COUNT(DISTINCT INDEKS)>50;",
      "ordering": "1"
    },
    {
      "task": "Za ispitne rokove koji su održani u 2016. godini i u kojima su svi regularno polagani ispiti i položeni, izdvojiti oznaku roka, broj položenih ispita u tom roku i broj studenata koji su položili ispite u tom roku. ",
      "solution": "SELECT OZNAKAROKA, COUNT(*), COUNT(DISTINCT INDEKS) FROM DA.ISPIT WHERE SKGODINA=2016 AND STATUS='o' GROUP BY OZNAKAROKA HAVING MIN(OCENA)>5;",
      "ordering": "1"
    },
    {
      "task": "Za svakog studenta izdvojiti broj indeksa i mesec u kome je položio više od dva ispita (nije važno koje godine). Izdvojiti indeks studenta, ime meseca i broj položenih predmeta. Rezultat urediti prema broju indeksa i mesecu polaganja.",
      "solution": "SELECT INDEKS, MONTHNAME(DATPOLAGANJA) MESEC, COUNT(*) FROM DA.ISPIT WHERE OCENA>5 AND STATUS='o' GROUP BY INDEKS, MONTHNAME(DATPOLAGANJA) HAVING COUNT(*)>2 ORDER BY INDEKS, MONTHNAME(DATPOLAGANJA);"
    },
    {
      "task": "Za svaki predmet koji nosi najmanje espb bodova izdvojiti studente koji su ga položili. Izdvojiti naziv predmeta i ime i prezime studenta. Ime i prezime studenta izdvojiti u jednoj koloni. Za predmete sa najmanjim brojem espb koje nije položio ni jedan student umesto imena i prezimena ispisati \"nema\".",
      "solution": "SELECT P.NAZIV, COALESCE(IME || ' ' || PREZIME, 'nema') FROM DA.PREDMET P LEFT JOIN DA.ISPIT I     ON I.IDPREDMETA = P.ID   LEFT JOIN DA.DOSIJE D     ON D.INDEKS = I.INDEKS WHERE ESPB = (   SELECT MIN(ESPB)   FROM DA.PREDMET   );",
      "ordering": "1,2"
    },
    {
      "task": "Za svakog studenta koji je položio između 15 i 25 bodova i čije ime sadrži malo ili veliko slovo o ili a izdvojiti indeks, ime, prezime, broj prijavljenih ispita, broj ispita koje je položio i prosečnu ocenu zaokruženu na dve decimale. Rezultat urediti prema indeksu.",
      "solution": "SELECT D.INDEKS, IME, PREZIME,   COUNT(DISTINCT I.IDPREDMETA), SUM(CASE WHEN STATUS NOT IN ('p', 'n') THEN 1 ELSE 0 END),   SUM(CASE WHEN OCENA>5 AND STATUS='o' THEN 1 ELSE 0 END),   DEC(ROUND(AVG(CASE WHEN OCENA>5 AND STATUS='o' THEN OCENA*1.0 ELSE NULL END), 2), 4, 2) FROM DA.DOSIJE D JOIN DA.ISPIT I      ON D.INDEKS = I.INDEKS   JOIN DA.PREDMET P     ON P.ID = I.IDPREDMETA  WHERE LOWER(IME) LIKE '%o%' OR LOWER(PREZIME) LIKE '%a%' GROUP BY D.INDEKS, IME, PREZIME HAVING SUM(CASE WHEN OCENA>5 AND STATUS='o' THEN ESPB ELSE 0 END) BETWEEN 15 AND 25 ORDER BY D.INDEKS;"
    },
    {
      "task": "Izdvojiti parove studenata čija imena počinju na slovo M i za koje važi da su bar dva ista predmeta položili u istom ispitnom roku. Izdvojiti indekse studenata tako da prvi student ima manji indeks od drugog.",
      "solution": "SELECT DISTINCT D1.INDEKS, D1.IME, D1.PREZIME, D2.INDEKS, D2.IME, D2.PREZIME FROM DA.DOSIJE D1 JOIN DA.DOSIJE D2 ON D1.IME LIKE 'M%' AND D2.IME LIKE 'M%' AND D1.INDEKS < D2.INDEKS JOIN DA.ISPIT I1 ON D1.INDEKS=I1.INDEKS AND I1.OCENA>5 AND I1.STATUS='o' JOIN DA.ISPIT I2 ON D2.INDEKS=I2.INDEKS AND I2.OCENA>5 AND I2.STATUS='o' AND I1.IDPREDMETA = I2.IDPREDMETA AND I1.OZNAKAROKA=I2.OZNAKAROKA AND I1.SKGODINA=I2.SKGODINA GROUP BY D1.INDEKS, D1.IME, D1.PREZIME, D2.INDEKS, D2.IME, D2.PREZIME HAVING COUNT(*)>=2;",
      "ordering": "1,2"
    }
  ]
}